on:
  deployment:

#name: "Deploy '${{ github.event.deployment.payload.application_name }} on '${{ github.event.deployment.environment }}' environment"

jobs:
  deploy:
    name: "Deploy '${{ github.event.deployment.payload.application_name }}:${{ github.event.deployment.payload.application_version }}' (helm: '${{ github.event.deployment.payload.helm_chart }}:${{ github.event.deployment.payload.helm_chart_version }}') on '${{ github.event.deployment.environment }}' environment" 
    runs-on: ubuntu-latest
    steps:

    - uses: actions/github-script@v4.0.2
      with:
        github-token: ${{secrets.GH_TOKEN}}
        script: |
          const result = await github.repos.createDeploymentStatus({
            "owner": "snarky",
            "repo": "gh-deploy",
            "deployment_id": "${{ github.event.deployment.id }}",
            "mediaType": {
              "previews": ["flash"],
            },
            "state": "in_progress",
          });
          
    - id: deploy 
      run: |
        echo "ðŸš€ HELLO"
        echo "--"
        env
        echo "--"
        echo "HELM CHART VERSION: $(jq -r '.' "${GITHUB_EVENT_PATH}")"
        echo "--"
        echo "APP  NAME: ${{ github.event.deployment.payload.application_name }}"
        echo "APP VERSION: ${{ github.event.deployment.payload.application_version }}"
        echo "HELM CHART: ${{ github.event.deployment.payload.helm_chart }}"
        echo "HELM CHART VERSION: ${{ github.event.deployment.payload.helm_chart_version }}"
        echo "ENVIRONMENT: ${{ github.event.deployment.environment }}"
        sleep 30
        echo "Done!"
        exit 0
        
    - name: "Deploy '${{ github.event.deployment.payload.application_name }}:${{ github.event.deployment.payload.application_version }}' (helm: '${{ github.event.deployment.payload.helm_chart }}:${{ github.event.deployment.payload.helm_chart_version }}') on '${{ github.event.deployment.environment }}' environment" 
      run: |
        echo "dfdf"
        
    # exit "$(shuf -i 0-1 -n 1)"

    - if: always()
      run: |
        echo "ALWAYS"
        echo "job: ${{ toJSON(job) }}"
    #- uses: actions/github-script@v4.0.2
    #  with:
    #    github-token: ${{secrets.GH_TOKEN}}
    #    script: |
    #      const result = await github.repos.createDeploymentStatus({
    #        "owner": "snarky",
    #        "repo": "gh-deploy",
    #        "deployment_id": "${{ github.event.deployment.id }}",
    #        "state": "failure",
    #      });
